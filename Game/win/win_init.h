#ifndef _WIN_INIT_H
#define _WIN_INIT_H

#include "wininclude.h"
#include "baseparse.h"
#include "textparser.h"

typedef struct GfxResolution
{	
	int x;
	int y;
	int depth;
	int *refreshRates;
} GfxResolution;
#define MAX_SUPPORTED_GFXRESOLUTIONS 1000


extern HINSTANCE glob_hinstance;
extern HWND	hwnd;

void DestroySplash();


// Generated by mkproto
void winMakeCurrent(void);
void windowSize(int *width,int *height);
void windowClientSize(int *width, int *height);
void windowClientSizeThisFrame(int *width,int *height);
void windowPhysicalSize(int *width,int *height);
int windowScaleY(int y);
void windowPosition(int *left,int *top);
void windowInit(void);
void winGetSupportedResolutions( GfxResolution * desktop, GfxResolution supported[], int * supportedCount );
void windowResize(int *widthp,int *heightp,int *refreshRatep,int x0,int y0,int fullscreen);
void windowResizeToggle(int *widthp,int *heightp,int *refreshRatep,int x0,int y0,int fullscreen, int old_fullscreen);
void windowShow(int fullscreen,int maximize);
void windowExitDlg(void * data);
void windowExit(int exitCode);
void windowUpdate(void);
void windowProcessMessages();
void winMsgAlert(char *str);	// "error" ok box
void winErrorDialog(char *str, char* title, char* fault, int highlight); // title & fault optional
void winErrorDispatch(void *unused, int type, void *data);
void winRenderStall(void);
int winMsgYesNo(char *str);
int winMsgOkCancel(char *str);
int winMsgYesNoParented(HWND parent, char *str);
int winMsgOkCancelParented(HWND parent, char *str);
void winMsgError(char *str);
char *winGetFileName(char *fileMask,char *fileName,int save);
char *winGetFolderName(char *dirname,char *title);
int winMaximized(void);
void winSetText(char *s);
void windowSetSize(int width, int height);
void rdrSetGamma(float Gamma);
void rdrNeedGammaReset(void);
void rdrRestoreGammaRamp(void);
void rdrSetVSync(int enable);
LONG WINAPI DefWindowProc_timed( HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam );

// End mkproto
#define TEXT_DIALOG_MAX_STRLEN 256 // callers must provide incoming buffer of this length or risk crash

bool winGetString(char *prompt, char *result); // max size TEXT_DIALOG_MAX_STRLEN
bool winGetEString(char *prompt, char **result); // no max size
	// prompt for a string with a windows dialog box, returns false on cancel, fills in result with new value and returns true on ok

#endif
