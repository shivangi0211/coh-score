#ifndef PBUFFERS_H
#define PBUFFERS_H

#include "mathutil.h"

#include "rt_pbuffer.h"

// Generated by mkproto
void pbufDelete(PBuffer *pbuf);
void pbufDeleteAll(void);
void pbufInit(PBuffer *pbuf,int w,int h,PBufferFlags flags,int desired_multisample_level,int required_multisample_level, int stencil_bits, int depth_bits, int num_aux_buffers, int map_mip_level);
void pbufMakeCurrent(PBuffer *pbuf);
U8 *pbufFrameGrab(PBuffer *pbuf, U8* buffer, U32 buffer_size);
void pbufBind(PBuffer *pbuf); // Binds as a texture
void pbufRelease(PBuffer *pbuf); // Unbinds as a texture

bool pbufStencilSupported(PBufferFlags flags);
void pbufSetupCopyTexture(PBuffer *pbuf, int texture_id);

// End mkproto
#endif
