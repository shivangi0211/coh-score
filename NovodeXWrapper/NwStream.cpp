// -------------------------------------------------------------------------------------------------------------------
// NOVODEX SDK STREAM INTERFACE
// Written by Tom Lassanske, 03-01-05
// -------------------------------------------------------------------------------------------------------------------
#include "NwWrapper.h"
#if NOVODEX

#include "NwStream.h"

#undef fopen
// -------------------------------------------------------------------------------------------------------------------
// CONSTRUCTION                                                                                           CONSTRUCTION
// -------------------------------------------------------------------------------------------------------------------
NwStream::NwStream(const char* filename, bool load) : fp(NULL)
{
    fp = fopen(filename, load ? "rb" : "wb");
}
// -------------------------------------------------------------------------------------------------------------------
NwStream::~NwStream()
{
    if (fp) fclose(fp);
}
// -------------------------------------------------------------------------------------------------------------------
bool NwStream::isValid() const
{
    return (fp != NULL);
}
// -------------------------------------------------------------------------------------------------------------------
// LOADING API                                                                                             LOADING API
// -------------------------------------------------------------------------------------------------------------------
NxU8 NwStream::readByte() const
{
    NxU8 b;
    size_t r = fread(&b, sizeof(NxU8), 1, fp);
    NX_ASSERT(r);
    return b;
}
// -------------------------------------------------------------------------------------------------------------------
NxU16 NwStream::readWord() const
{
    NxU16 w;
    size_t r = fread(&w, sizeof(NxU16), 1, fp);
    NX_ASSERT(r);
    return w;
}
// -------------------------------------------------------------------------------------------------------------------
NxU32 NwStream::readDword() const
{
    NxU32 d;
    size_t r = fread(&d, sizeof(NxU32), 1, fp);
    NX_ASSERT(r);
    return d;
}
// -------------------------------------------------------------------------------------------------------------------
float NwStream::readFloat() const
{
    NxReal f;
    size_t r = fread(&f, sizeof(NxReal), 1, fp);
    NX_ASSERT(r);
    return f;
}
// -------------------------------------------------------------------------------------------------------------------
double NwStream::readDouble() const
{
    NxF64 f;
    size_t r = fread(&f, sizeof(NxF64), 1, fp);
    NX_ASSERT(r);
    return f;
}
// -------------------------------------------------------------------------------------------------------------------
void NwStream::readBuffer(void* buffer, NxU32 size)	const
{
    size_t w = fread(buffer, size, 1, fp);
    NX_ASSERT(w);
}
// -------------------------------------------------------------------------------------------------------------------
// SAVING API                                                                                               SAVING API
// -------------------------------------------------------------------------------------------------------------------
NxStream& NwStream::storeByte(NxU8 b)
{
    size_t w = fwrite(&b, sizeof(NxU8), 1, fp);
    NX_ASSERT(w);
    return *this;
}
// -------------------------------------------------------------------------------------------------------------------
NxStream& NwStream::storeWord(NxU16 w)
{
    size_t ww = fwrite(&w, sizeof(NxU16), 1, fp);
    NX_ASSERT(ww);
    return *this;
}
// -------------------------------------------------------------------------------------------------------------------
NxStream& NwStream::storeDword(NxU32 d)
{
    size_t w = fwrite(&d, sizeof(NxU32), 1, fp);
    NX_ASSERT(w);
    return *this;
}
// -------------------------------------------------------------------------------------------------------------------
NxStream& NwStream::storeFloat(NxReal f)
{
    size_t w = fwrite(&f, sizeof(NxReal), 1, fp);
    NX_ASSERT(w);
    return *this;
}
// -------------------------------------------------------------------------------------------------------------------
NxStream& NwStream::storeDouble(NxF64 f)
{
    size_t w = fwrite(&f, sizeof(NxF64), 1, fp);
    NX_ASSERT(w);
    return *this;
}
// -------------------------------------------------------------------------------------------------------------------
NxStream& NwStream::storeBuffer(const void* buffer, NxU32 size)
{
    size_t w = fwrite(buffer, size, 1, fp);
    NX_ASSERT(w);
    return *this;
}
// -------------------------------------------------------------------------------------------------------------------
#endif