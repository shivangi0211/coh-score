/***************************************************************************
 *     Copyright (c) 2000-2006, Cryptic Studios
 *     All Rights Reserved
 *     Confidential Property of Cryptic Studios
 ***************************************************************************/
#ifndef ENTCLIENT_H__
#define ENTCLIENT_H__

#include "stdtypes.h"

typedef struct Packet Packet;
typedef struct Entity Entity;
typedef struct TrickInfo TrickInfo;

extern Entity   *entities[];
extern Entity   *ent_xlat[];
extern U8       entity_state[];
extern int      entities_max;

enum
{
	SET_BY_CAMERA,
	SET_BY_SERVER,
	SET_BY_BIRTH_OR_DEATH,
	SET_BY_DISTANCE,
	SET_BY_FX,
};

// Generated by mkproto
Entity *entFromId(int id); 
Entity *validEntFromId(int id);
Entity *entAlloc(void);
void entFree(Entity *ent);
void entReset(void);
void entResetNonPlayer(void);
void entClientProcess(void);
void entClientProcessVisibility(void);
Entity *entCreate(char * type);
void entSetAlpha( Entity * e, int alpha, int type );
void changeBody(Entity * entity, const char * type);
int changeGeo(Entity * entity, int bone, char newgeo[], int warn);
void changeTexture(Entity * entity, int bone, char newtexture1[], char newtexture2[]);
void changeColor(Entity * entity, int bone, char rgba1[], char rgba2[]);
int changeScale(Entity * e, Vec3 newscale );
Entity * entFindEntAtThisPosition(Vec3 pos, F32 tolerance);
void entReloadSequencersClient(void);
void entResetTrickFlags(void);
void entResetModels(void);
bool isEntityIntentionallyHidden( Entity * e );

char    *playerName(void);
Entity  *entFromDbId(int db_id);
int     entIdxFromDbId(int db_id);
char    *nameFromDbId( int db_id );
void    doChangeBody( Entity *p );
void uigameDemoForceMenu(void);
char * handleFromNameSlow( char * name );
#endif /* #ifndef ENTCLIENT_H__ */

/* End of File */

