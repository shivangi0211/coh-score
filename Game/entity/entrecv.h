/***************************************************************************
 *     Copyright (c) 2000-2006, Cryptic Studios
 *     All Rights Reserved
 *     Confidential Property of Cryptic Studios
 ***************************************************************************/
#ifndef ENTRECV_H__
#define ENTRECV_H__

enum
{
	LOADING_MAP     = 0,
	PLAYING_GAME    = 1,
	MAP_LOADED_FINISHING_LOADING_BAR = 2 //this state is to give one final frame to finish loading enities, and
	                                     //then to run the loading bar to the end.
};

typedef struct Entity Entity;
typedef struct NetFx NetFx;
typedef struct Packet Packet;

// Generated by mkproto
void receivePlayerPhysicsState(Packet *pak);
void entReceiveDeletes(Packet *pak);
void receiveGameInfo(Packet *pak);
void receiveGfxNameTable(Packet *pak);
int recvThisFrame(Entity *e);
void entReceiveInit();
void entReceiveUpdate(Packet *pak,int full_update);
void entCalcInterp(Entity *e, Mat4 mat, U32 client_abs, Vec3 out_qrot);
int entNetUpdate(); // Returns the number of live ents
// End mkproto

// Moved from entclient.c/h
void    receiveCharacterFromServer( Packet *pak, Entity *e );
void    sendCharacterToServer(  Packet *pak, Entity *e );

void clearQueuedDeletes(void);

void debugShowNetfx( Entity * e, NetFx * netfx );
NetFx *entrecvAllocNetFx(Entity *e);

int entGetRagdoll_ForDemoPlayback(Entity *e, int num_bones, int *ragdollCompressed, int svr_last_frame_dt, int svr_client_dt, int frame_dt);

extern int demo_recording;

#endif /* #ifndef ENTRECV_H__ */

/* End of File */

