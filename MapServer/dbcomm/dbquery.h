#ifndef _DBQUERY_H
#define _DBQUERY_H

#include "gametypes.h"

typedef struct
{
	int		db_id;
	int		map_id;
	int		static_map_id;
	U8		team_area;
	int		prestige;
	U32		last_active;
	U32		member_since;
	U8		leader : 1;
	U8		updated : 1;
	U8		arena_map : 1;
	U8		mission_map : 1;
	U8		can_co_faction : 1;
	U8		faction_same_map : 1;
	U8		can_co_universe : 1;
	U8		universe_same_map : 1;
	U8		league_leader : 1;
	U8		leaguesize;
	U8		teamsize;
	U8		hidefield;
	U8		lfg;
	U8		level;
	U8		origin;
	U8		archetype;
	U8		type;
	U8		influenceType;
	U8		subtype;
	U8		praetorian;
	char	comment[MAX_NAME_LEN];
} OnlinePlayerInfo;

// Based off of defines in entPlayer.h
#define OPI_IS_HERO(opi)		((opi) ? (opi->type == kPlayerType_Hero) : 0)
#define OPI_IS_VILLAIN(opi)	((opi) ? (opi->type == kPlayerType_Villain) : 0)
#define OPI_IS_ROGUE(opi)		((opi) ? (opi->subtype == kPlayerSubType_Rogue) : 0)
#define OPI_IS_IN_PRAETORIA(opi)	((opi) ? (opi->praetorian == kPraetorianProgress_Tutorial || opi->praetorian == kPraetorianProgress_Praetoria) : 0)
#define OPI_IS_EX_PRAETORIAN(opi)	((opi) ? (opi->praetorian == kPraetorianProgress_PrimalEarth) : 0)
#define OPI_IS_PRIMAL(opi)	((opi) ? (opi->praetorian == kPraetorianProgress_PrimalBorn || opi->praetorian == kPraetorianProgress_NeutralInPrimalTutorial) : 0)
#define OPI_IS_PRAETORIAN(opi)	((opi) ? (opi->praetorian != kPraetorianProgress_PrimalBorn && opi->praetorian != kPraetorianProgress_NeutralInPrimalTutorial) : 0)

// Generated by mkproto
void dbQueryReceiveInfo(Packet *pak);
char *dbQuery(char *query_cmd);
int dbQueryGetCharacter(char* db_id, char* new_auth);
int dbQueryGetSgLeaders(char *leaders_fn);
bool dbQueryGetFilter(const char *line);
int dbQueryPutCharacter(char *filename);
int dbQueryWrapper(int argc, char **argv); // Returns 0 on success
int dbQueryOnline(int list_id,int container_id);
void handleOnlineEnts(Packet *pak);
void handleOnlineEntComments(Packet *pak);
OnlinePlayerInfo *dbGetOnlinePlayerInfo(int db_id);
void dbUpdateAllOnlineInfo();
void dbUpdateAllOnlineInfoComments();
OnlinePlayerInfo *onlinePlayerInfoIncremental();
int dbQueryGetContainerIDForName(int type, char *db_id);
// End mkproto
#endif
