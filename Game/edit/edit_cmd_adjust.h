#ifndef _EDIT_CMD_ADJUST_H
#define _EDIT_CMD_ADJUST_H

typedef struct PropertyDialogParams {
	char* property;
	char* value;
} PropertyDialogParams;

// Generated by mkproto
void getFogDist();
void getFogSize();
void getFogSpeed();
void editCmdFogColor();
void editAddProperty();
void editCmdSoundSize();
void editCmdSoundVol();
void editCmdSoundRamp();
void editCmdSoundName();
void editCmdSoundScript();
void editCmdSoundFind();
void editCmdSoundExclude();
void editCmdBoxScale();
void editCmdUnsetAmbient();
void editCmdLightColor();
void editCmdLightSize();
void editCmdAdjustCubemap(void);
void editCmdRemoveTex();
void editCmdReplaceTex();
void editCmdTintColor();
void editCmdSetLod();
void editCmdLodFadeNode();
void editCmdLodFadeNode2();
void editCmdNoFogClip();
void editCmdNoColl();
void editCmdLodDisable();
void editCmdLodEnable();
void editCmdBeaconName();
void editCmdBeaconSize();
void editCmdShowBeaconConnection();
void editCmdShowBeaconPath(int start);
void editCmdFindNextProperty( int findType ); 
void editCmdBurningBuildingSpeed();
void editCmdBurningBuildingModifyHealth();
typedef union Color Color;
void drawScaledBoxArbitrary(Mat4 mat,Vec3 size,GroupDef *box,Color tint[2]);
void scalableVolumesDraw();

typedef struct EditCmdBoxScaleInfo {
	int ID;
	char x[25];
	char y[25];
	char z[25];
	DefTracker * tracker;
	GroupDef * def;
	Vec3 oldScale;
	Mat4 mat;
} EditCmdBoxScaleInfo;

EditCmdBoxScaleInfo boxScaleInfo;

// End mkproto
#endif
