#ifndef _DOOR_H
#define	_DOOR_H

#include "dbdoor.h"
#include "wininclude.h"
#include "SgrpBasePermissions.h"
#include "BaseEntry.h"
#include "storyarcinterface.h"

#define MAX_DOOR_BEACON_DIST 90
#define SGMISSION_MAX_PLAYERS 24

typedef struct ArenaEvent ArenaEvent;
typedef struct Entity Entity;
typedef struct Supergroup Supergroup;

// Generated by mkproto
void sendDoorMsg( Entity *e, int msg_type, char *errmsg, ... );
int getMapId(char *mapname);
void enterDoor(Entity *e,Vec3 pos,char* selected_map_id,int is_volume,StashTable volume_props);	//	if mapFile != 0, specific map file will be used (if legal)
void enterScriptDoor(Entity *e, const char *zone, const char *spawnTarget, int baseID, int selectedID);
int lockTeamupForDoor(Entity* e);
void leaveMission(Entity* e, int selected_map_id, int no_choice);	// send entity off mission map and to last static map
void leaveMissionViaAlternateDoor(Entity *e, DoorEntry *door);
int dbBeginGurneyXfer(Entity *e, bool bBase);
void StartMission(ClientLink * client, char * missionName, char * specificMapFile);
void StartStoryArcMission(ClientLink* client, char* logicalname, char* episodename, char* mapFile);
int EnterMission(Entity *pPlayer, StoryTaskInfo *pTask);
int EnterArena(Entity* e, ArenaEvent* event);
bool EnterBases(Entity *e, Vec3 pos);
bool CatchMonorail(Entity *e, char *line);
void DoorArchitectEntryTick();
void DoorArchitectBanUpdate(U32 arcId, int banstatus, int honors);

void enterLocalMission(Entity* player, int doorId, int mowner, char* mapfile, char* errmsg);
void exitLocalMission(Entity* player);

#define DOOR_LOCKED		1
void ScriptLockOrUnlockDoor( Vec3 doorPos, const char * msg, int lockOrUnlock );
void ClearAllDoorsLockedByScript();
char * IsDoorLockedByScript( const Vec3 doorPos );
bool CanEnterDoor(Entity *e);
// End mkproto

// *********************************************************************************
//  Base Doors
// *********************************************************************************

void SendBaseAccess(Entity *e, char *nameBase, int idSgrp, BaseAccess access);

#endif
